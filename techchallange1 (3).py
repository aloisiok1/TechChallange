# -*- coding: utf-8 -*-
"""TechChallange1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1YgYJ7OWwHbxoS3vj77lawEoS5Nuprs2f
"""

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

"""## 1 Extração dos dados

#1.1 Produção de 2007 até 2021
"""

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2007&opcao=opt_02')
producao2007 = leitura[5]
producao2007.head()

producao2007 = producao2007.rename(columns={"Quantidade (L.)" : "2007"})
producao2007.head()

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2008&opcao=opt_02')
producao2008 = leitura[5]
producao2008.head()

producao2008 = producao2008.rename(columns={"Quantidade (L.)" : "2008"})
producao2008.head()

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2009&opcao=opt_02')
producao2009 = leitura[5]
producao2009.head()

producao2009 = producao2009.rename(columns={"Quantidade (L.)" : "2009"})
producao2009.head()

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2010&opcao=opt_02')
producao2010 = leitura[5]
producao2010.head()

producao2010 = producao2010.rename(columns={"Quantidade (L.)" : "2010"})
producao2010.head()

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2011&opcao=opt_02')
producao2011 = leitura[5]
producao2011.head()

producao2011 = producao2011.rename(columns={"Quantidade (L.)" : "2011"})
producao2011.head()

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2012&opcao=opt_02')
producao2012 = leitura[5]
producao2012.head()

producao2012 = producao2012.rename(columns={"Quantidade (L.)" : "2012"})
producao2012.head()

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2013&opcao=opt_02')
producao2013 = leitura[5]
producao2013.head()

producao2013 = producao2013.rename(columns={"Quantidade (L.)" : "2013"})
producao2013.head()

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2014&opcao=opt_02')
producao2014 = leitura[5]
producao2014.head()

producao2014 = producao2014.rename(columns={"Quantidade (L.)" : "2014"})
producao2014.head()

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2015&opcao=opt_02')
producao2015 = leitura[5]
producao2015.head()

producao2015 = producao2015.rename(columns={"Quantidade (L.)" : "2015"})
producao2015.head()

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2016&opcao=opt_02')
producao2016 = leitura[5]
producao2016.head()

producao2016 = producao2016.rename(columns={"Quantidade (L.)" : "2016"})
producao2016.head()

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2017&opcao=opt_02')
producao2017 = leitura[5]
producao2017.head()

producao2017 = producao2017.rename(columns={"Quantidade (L.)" : "2017"})
producao2017.head()

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2018&opcao=opt_02')
producao2018 = leitura[5]
producao2018.head()

producao2018 = producao2018.rename(columns={"Quantidade (L.)" : "2018"})
producao2018.head()

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2019&opcao=opt_02')
producao2019 = leitura[5]
producao2019.head()

producao2019 = producao2019.rename(columns={"Quantidade (L.)" : "2019"})
producao2019.head()

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2020&opcao=opt_02')
producao2020 = leitura[5]
producao2020.head()

producao2020 = producao2020.rename(columns={"Quantidade (L.)" : "2020"})
producao2020.head()

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2021&opcao=opt_02')
producao2021 = leitura[5]
producao2021.head()

producao2021 = producao2021.rename(columns={"Quantidade (L.)" : "2021"})
producao2021.head()

producao_total = pd.concat([producao2007, producao2008, producao2009, producao2010, producao2011, producao2012, producao2013,
                            producao2014, producao2015, producao2016, producao2017, producao2018, producao2019, producao2020, producao2021], axis=1)
producao_total.head()

colunas_sel = ["Produto", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021"]
producao_total = producao_total.loc[:, colunas_sel]
producao_total.head()

producao_total = producao_total.iloc[:, 14:]
producao_total.head()

producao_total = producao_total.set_index(producao_total.columns[0])

index_column = producao_total.index.name
print(index_column)

producao_total.to_excel('producao_total.xlsx', index=True)

"""# 1.2 exportação de Vinho de 2007 até 2021"""

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2007&opcao=opt_06&subopcao=subopt_01')
exportacao2007 = leitura[5]
exportacao2007.head()

exportacao2007 = exportacao2007.rename(columns={"Quantidade (Kg)" : "2007 (Ltr)", "Valor (US$)" : "2007 Valor (USD)"})
exportacao2007.head()

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2008&opcao=opt_06&subopcao=subopt_01')
exportacao2008 = leitura[5]
exportacao2008.head()

exportacao2008 = exportacao2008.rename(columns={"Quantidade (Kg)" : "2008 (Ltr)", "Valor (US$)" : "2008 Valor (USD)"})
exportacao2008.head()

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2009&opcao=opt_06&subopcao=subopt_01')
exportacao2009 = leitura[5]
exportacao2009.head()

exportacao2009 = exportacao2009.rename(columns={"Quantidade (Kg)" : "2009 (Ltr)", "Valor (US$)" : "2009 Valor (USD)"})
exportacao2009.head()

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2010&opcao=opt_06&subopcao=subopt_01')
exportacao2010 = leitura[5]
exportacao2010.head()

exportacao2010 = exportacao2010.rename(columns={"Quantidade (Kg)" : "2010 (Ltr)", "Valor (US$)" : "2010 Valor (USD)"})
exportacao2010.head()

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2011&opcao=opt_06&subopcao=subopt_01')
exportacao2011 = leitura[5]
exportacao2011.head()

exportacao2011 = exportacao2011.rename(columns={"Quantidade (Kg)" : "2011 (Ltr)", "Valor (US$)" : "2011 Valor (USD)"})
exportacao2011.head()

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2012&opcao=opt_06&subopcao=subopt_01')
exportacao2012 = leitura[5]
exportacao2012.head()

exportacao2012 = exportacao2012.rename(columns={"Quantidade (Kg)" : "2012 (Ltr)", "Valor (US$)" : "2012 Valor (USD)"})
exportacao2012.head()

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2013&opcao=opt_06&subopcao=subopt_01')
exportacao2013 = leitura[5]
exportacao2013.head()

exportacao2013 = exportacao2013.rename(columns={"Quantidade (Kg)" : "2013 (Ltr)", "Valor (US$)" : "2013 Valor (USD)"})
exportacao2013.head()

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2014&opcao=opt_06&subopcao=subopt_01')
exportacao2014 = leitura[5]
exportacao2014.head()

exportacao2014 = exportacao2014.rename(columns={"Quantidade (Kg)" : "2014 (Ltr)", "Valor (US$)" : "2014 Valor (USD)"})
exportacao2014.head()

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2015&opcao=opt_06&subopcao=subopt_01')
exportacao2015 = leitura[5]
exportacao2015.head()

exportacao2015 = exportacao2015.rename(columns={"Quantidade (Kg)" : "2015 (Ltr)", "Valor (US$)" : "2015 Valor (USD)"})
exportacao2015.head()

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2016&opcao=opt_06&subopcao=subopt_01')
exportacao2016 = leitura[5]
exportacao2016.head()

exportacao2016 = exportacao2016.rename(columns={"Quantidade (Kg)" : "2016 (Ltr)", "Valor (US$)" : "2016 Valor (USD)"})
exportacao2016.head()

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2017&opcao=opt_06&subopcao=subopt_01')
exportacao2017 = leitura[5]
exportacao2017.head()

exportacao2017 = exportacao2017.rename(columns={"Quantidade (Kg)" : "2017 (Ltr)", "Valor (US$)" : "2017 Valor (USD)"})
exportacao2017.head()

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2018&opcao=opt_06&subopcao=subopt_01')
exportacao2018 = leitura[5]
exportacao2018.head()

exportacao2018 = exportacao2018.rename(columns={"Quantidade (Kg)" : "2018 (Ltr)", "Valor (US$)" : "2018 Valor (USD)"})
exportacao2018.head()

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2019&opcao=opt_06&subopcao=subopt_01')
exportacao2019 = leitura[5]
exportacao2019.head()

exportacao2019 = exportacao2019.rename(columns={"Quantidade (Kg)" : "2019 (Ltr)", "Valor (US$)" : "2019 Valor (USD)"})
exportacao2019.head()

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2020&opcao=opt_06&subopcao=subopt_01')
exportacao2020 = leitura[5]
exportacao2020.head()

exportacao2020 = exportacao2020.rename(columns={"Quantidade (Kg)" : "2020 (Ltr)", "Valor (US$)" : "2020 Valor (USD)"})
exportacao2020.head()

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2021&opcao=opt_06&subopcao=subopt_01')
exportacao2021 = leitura[5]
exportacao2021.head()

exportacao2021 = exportacao2021.rename(columns={"Quantidade (Kg)" : "2021 (Ltr)", "Valor (US$)" : "2021 Valor (USD)"})
exportacao2021.head()

exportacao_total = pd.concat([exportacao2007, exportacao2008, exportacao2009, exportacao2010, exportacao2011, exportacao2012, exportacao2013,
                            exportacao2014, exportacao2015, exportacao2016, exportacao2017, exportacao2018, exportacao2019, exportacao2020, exportacao2021], axis=1)
exportacao_total.head()

colunas_selecionadas = ["PaÃ­ses", "2007 (Ltr)",	"2007 Valor (USD)",	"2008 (Ltr)",	"2008 Valor (USD)",	"2009 (Ltr)",	"2009 Valor (USD)",	"2010 (Ltr)",	"2010 Valor (USD)",	"2011 (Ltr)",
                        "2011 Valor (USD)",	"2012 (Ltr)",	"2012 Valor (USD)",	"2013 (Ltr)",	"2013 Valor (USD)",	"2014 (Ltr)",	"2014 Valor (USD)",	"2015 (Ltr)",	"2015 Valor (USD)",
                        "2016 (Ltr)",	"2016 Valor (USD)",	"2017 (Ltr)",	"2017 Valor (USD)",	"2018 (Ltr)",	"2018 Valor (USD)",	"2019 (Ltr)",	"2019 Valor (USD)",	"2020 (Ltr)",
                        "2020 Valor (USD)",	"2021 (Ltr)",	"2021 Valor (USD)"]

exportacao_total = exportacao_total.loc[:, colunas_selecionadas]
exportacao_total.head()

exportacao_total = exportacao_total.iloc[:, 14:]
exportacao_total.head()

exportacao_total = exportacao_total.replace("-", 0)
exportacao_total.head()

exportacao_total = exportacao_total.set_index(exportacao_total.columns[0])

total_index = exportacao_total.index.name
print(total_index)

exportacao_total.head()

exportacao_total.to_excel('exportacao_total.xlsx', index=False)

"""# 1.3 Exportação espumantes de 2007 até 2021"""

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2007&opcao=opt_06&subopcao=subopt_02')
exportacao_esp_2007 = leitura[5]
exportacao_esp_2007.head()

exportacao_esp_2007 = exportacao_esp_2007.rename(columns={"Quantidade (Kg)" : "2007 (Ltr)", "Valor (US$)" : "2007 Valor (USD)"})
exportacao_esp_2007.head()

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2008&opcao=opt_06&subopcao=subopt_02')
exportacao_esp_2008 = leitura[5]
exportacao_esp_2008.head()

exportacao_esp_2008 = exportacao_esp_2008.rename(columns={"Quantidade (Kg)" : "2008 (Ltr)", "Valor (US$)" : "2008 Valor (USD)"})
exportacao_esp_2008.head()

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2009&opcao=opt_06&subopcao=subopt_02')
exportacao_esp_2009 = leitura[5]
exportacao_esp_2009.head()

exportacao_esp_2009 = exportacao_esp_2009.rename(columns={"Quantidade (Kg)" : "2009 (Ltr)", "Valor (US$)" : "2009 Valor (USD)"})
exportacao_esp_2009.head()

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2010&opcao=opt_06&subopcao=subopt_02')
exportacao_esp_2010 = leitura[5]
exportacao_esp_2010.head()

exportacao_esp_2010 = exportacao_esp_2010.rename(columns={"Quantidade (Kg)" : "2010 (Ltr)", "Valor (US$)" : "2010 Valor (USD)"})
exportacao_esp_2010.head()

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2011&opcao=opt_06&subopcao=subopt_02')
exportacao_esp_2011 = leitura[5]
exportacao_esp_2011.head()

exportacao_esp_2011 = exportacao_esp_2011.rename(columns={"Quantidade (Kg)" : "2011 (Ltr)", "Valor (US$)" : "2011 Valor (USD)"})
exportacao_esp_2011.head()

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2012&opcao=opt_06&subopcao=subopt_02')
exportacao_esp_2012 = leitura[5]
exportacao_esp_2012.head()

exportacao_esp_2012 = exportacao_esp_2012.rename(columns={"Quantidade (Kg)" : "2012 (Ltr)", "Valor (US$)" : "2012 Valor (USD)"})
exportacao_esp_2012.head()

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2013&opcao=opt_06&subopcao=subopt_02')
exportacao_esp_2013 = leitura[5]
exportacao_esp_2013.head()

exportacao_esp_2013 = exportacao_esp_2013.rename(columns={"Quantidade (Kg)" : "2013 (Ltr)", "Valor (US$)" : "2013 Valor (USD)"})
exportacao_esp_2013.head()

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2014&opcao=opt_06&subopcao=subopt_02')
exportacao_esp_2014 = leitura[5]
exportacao_esp_2014.head()

exportacao_esp_2014 = exportacao_esp_2014.rename(columns={"Quantidade (Kg)" : "2014 (Ltr)", "Valor (US$)" : "2014 Valor (USD)"})
exportacao_esp_2014.head()

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2015&opcao=opt_06&subopcao=subopt_02')
exportacao_esp_2015 = leitura[5]
exportacao_esp_2015.head()

exportacao_esp_2015 = exportacao_esp_2015.rename(columns={"Quantidade (Kg)" : "2015 (Ltr)", "Valor (US$)" : "2015 Valor (USD)"})
exportacao_esp_2015.head()

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2016&opcao=opt_06&subopcao=subopt_02')
exportacao_esp_2016 = leitura[5]
exportacao_esp_2016.head()

exportacao_esp_2016 = exportacao_esp_2016.rename(columns={"Quantidade (Kg)" : "2016 (Ltr)", "Valor (US$)" : "2016 Valor (USD)"})
exportacao_esp_2016.head()

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2017&opcao=opt_06&subopcao=subopt_02')
exportacao_esp_2017 = leitura[5]
exportacao_esp_2017.head()

exportacao_esp_2017 = exportacao_esp_2017.rename(columns={"Quantidade (Kg)" : "2017 (Ltr)", "Valor (US$)" : "2017 Valor (USD)"})
exportacao_esp_2017.head()

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2018&opcao=opt_06&subopcao=subopt_02')
exportacao_esp_2018 = leitura[5]
exportacao_esp_2018.head()

exportacao_esp_2018 = exportacao_esp_2018.rename(columns={"Quantidade (Kg)" : "2018 (Ltr)", "Valor (US$)" : "2018 Valor (USD)"})
exportacao_esp_2018.head()

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2019&opcao=opt_06&subopcao=subopt_02')
exportacao_esp_2019 = leitura[5]
exportacao_esp_2019.head()

exportacao_esp_2019 = exportacao_esp_2019.rename(columns={"Quantidade (Kg)" : "2019 (Ltr)", "Valor (US$)" : "2019 Valor (USD)"})
exportacao_esp_2019.head()

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2020&opcao=opt_06&subopcao=subopt_02')
exportacao_esp_2020 = leitura[5]
exportacao_esp_2020.head()

exportacao_esp_2020 = exportacao_esp_2020.rename(columns={"Quantidade (Kg)" : "2020 (Ltr)", "Valor (US$)" : "2020 Valor (USD)"})
exportacao_esp_2020.head()

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2021&opcao=opt_06&subopcao=subopt_02')
exportacao_esp_2021 = leitura[5]
exportacao_esp_2021.head()

exportacao_esp_2021 = exportacao_esp_2021.rename(columns={"Quantidade (Kg)" : "2021 (Ltr)", "Valor (US$)" : "2021 Valor (USD)"})
exportacao_esp_2021.head()

exportacao_esp_total = pd.concat([exportacao_esp_2007, exportacao_esp_2008, exportacao_esp_2009, exportacao_esp_2010, exportacao_esp_2011, exportacao_esp_2012, exportacao_esp_2013,
                            exportacao_esp_2014, exportacao_esp_2015, exportacao_esp_2016, exportacao_esp_2017, exportacao_esp_2018, exportacao_esp_2019, exportacao_esp_2020, exportacao_esp_2021], axis=1)
exportacao_esp_total.head()

colunas_sele = ["PaÃ­ses", "2007 (Ltr)",	"2007 Valor (USD)",	"2008 (Ltr)",	"2008 Valor (USD)",	"2009 (Ltr)",	"2009 Valor (USD)",	"2010 (Ltr)",	"2010 Valor (USD)",	"2011 (Ltr)",
                        "2011 Valor (USD)",	"2012 (Ltr)",	"2012 Valor (USD)",	"2013 (Ltr)",	"2013 Valor (USD)",	"2014 (Ltr)",	"2014 Valor (USD)",	"2015 (Ltr)",	"2015 Valor (USD)",
                        "2016 (Ltr)",	"2016 Valor (USD)",	"2017 (Ltr)",	"2017 Valor (USD)",	"2018 (Ltr)",	"2018 Valor (USD)",	"2019 (Ltr)",	"2019 Valor (USD)",	"2020 (Ltr)",
                        "2020 Valor (USD)",	"2021 (Ltr)",	"2021 Valor (USD)"]

exportacao_esp_total = exportacao_esp_total.loc[:, colunas_sele]
exportacao_esp_total.head()

exportacao_esp_total = exportacao_esp_total.iloc[:, 14:]
exportacao_esp_total.head()

exportacao_esp_total = exportacao_esp_total.replace("-", 0)
exportacao_esp_total.head()

exportacao_esp_total = exportacao_esp_total.set_index(exportacao_esp_total.columns[0])

index_column = exportacao_esp_total.index.name
print(index_column)

def safe_division(x, y):
    if y != 0:
        return x / y
    else:
        return 0

for year in range(2007, 2021):
    index = ["Paises"]
    valor1_col = f"{year} (Ltr)"
    valor2_col = f"{year} Valor (USD)"
    media_ = f'media_{year}'
    exportacao_esp_total.loc[:, valor1_col] = pd.to_numeric(exportacao_esp_total[valor1_col], errors='coerce')
    exportacao_esp_total.loc[:, valor2_col] = pd.to_numeric(exportacao_esp_total[valor2_col], errors='coerce')
    exportacao_esp_total.loc[:, media_] = exportacao_esp_total.apply(lambda row: safe_division(row[valor2_col], row[valor1_col]), axis=1)

# Reorganizando as colunas na ordem desejada
columns_ordered = []
for year in range(2007, 2021):
    valor1_col = f"{year} (Ltr)"
    valor2_col = f"{year} Valor (USD)"
    media_ = f'media_{year}'
    columns_ordered.extend([valor1_col, valor2_col, media_])

exportacao_esp_total = exportacao_esp_total[columns_ordered]
exportacao_esp_total.fillna(0, inplace=True)


exportacao_esp_total.head()

exportacao_esp_total.to_excel('exportacao_esp_total.xlsx', index=False)

"""# 1.4 Processamento de Uvas Tipo Viníferas de 2007 até 2021"""

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2007&opcao=opt_03&subopcao=subopt_01')
proces_vinifera_2007 = leitura[5]
proces_vinifera_2007.head()

proces_vinifera_2007 = proces_vinifera_2007.rename(columns={"Quantidade (Kg)" : "2007 (Ltr)"})
proces_vinifera_2007.head()

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2008&opcao=opt_03&subopcao=subopt_01')
proces_vinifera_2008 = leitura[5]
proces_vinifera_2008.head()

proces_vinifera_2008 = proces_vinifera_2008.rename(columns={"Quantidade (Kg)" : "2008 (Ltr)"})
proces_vinifera_2008.head()

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2009&opcao=opt_03&subopcao=subopt_01')
proces_vinifera_2009 = leitura[5]
proces_vinifera_2009.head()

proces_vinifera_2009 = proces_vinifera_2009.rename(columns={"Quantidade (Kg)" : "2009 (Ltr)"})
proces_vinifera_2009.head()

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2010&opcao=opt_03&subopcao=subopt_01')
proces_vinifera_2010 = leitura[5]
proces_vinifera_2010.head()

proces_vinifera_2010 = proces_vinifera_2010.rename(columns={"Quantidade (Kg)" : "2010 (Ltr)"})
proces_vinifera_2010.head()

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2011&opcao=opt_03&subopcao=subopt_01')
proces_vinifera_2011 = leitura[5]
proces_vinifera_2011.head()

proces_vinifera_2011 = proces_vinifera_2011.rename(columns={"Quantidade (Kg)" : "2011 (Ltr)"})
proces_vinifera_2011.head()

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2012&opcao=opt_03&subopcao=subopt_01')
proces_vinifera_2012 = leitura[5]
proces_vinifera_2012.head()

proces_vinifera_2012 = proces_vinifera_2012.rename(columns={"Quantidade (Kg)" : "2012 (Ltr)"})
proces_vinifera_2012.head()

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2013&opcao=opt_03&subopcao=subopt_01')
proces_vinifera_2013 = leitura[5]
proces_vinifera_2013.head()

proces_vinifera_2013 = proces_vinifera_2013.rename(columns={"Quantidade (Kg)" : "2013 (Ltr)"})
proces_vinifera_2013.head()

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2014&opcao=opt_03&subopcao=subopt_01')
proces_vinifera_2014 = leitura[5]
proces_vinifera_2014.head()

proces_vinifera_2014 = proces_vinifera_2014.rename(columns={"Quantidade (Kg)" : "2014 (Ltr)"})
proces_vinifera_2014.head()

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2015&opcao=opt_03&subopcao=subopt_01')
proces_vinifera_2015 = leitura[5]
proces_vinifera_2015.head()

proces_vinifera_2015 = proces_vinifera_2015.rename(columns={"Quantidade (Kg)" : "2015 (Ltr)"})
proces_vinifera_2015.head()

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2016&opcao=opt_03&subopcao=subopt_01')
proces_vinifera_2016 = leitura[5]
proces_vinifera_2016.head()

proces_vinifera_2016 = proces_vinifera_2016.rename(columns={"Quantidade (Kg)" : "2016 (Ltr)"})
proces_vinifera_2016.head()

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2017&opcao=opt_03&subopcao=subopt_01')
proces_vinifera_2017 = leitura[5]
proces_vinifera_2017.head()

proces_vinifera_2017 = proces_vinifera_2017.rename(columns={"Quantidade (Kg)" : "2017 (Ltr)"})
proces_vinifera_2017.head()

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2018&opcao=opt_03&subopcao=subopt_01')
proces_vinifera_2018 = leitura[5]
proces_vinifera_2018.head()

proces_vinifera_2018 = proces_vinifera_2018.rename(columns={"Quantidade (Kg)" : "2018 (Ltr)"})
proces_vinifera_2018.head()

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2019&opcao=opt_03&subopcao=subopt_01')
proces_vinifera_2019 = leitura[5]
proces_vinifera_2019.head()

proces_vinifera_2019 = proces_vinifera_2019.rename(columns={"Quantidade (Kg)" : "2019 (Ltr)"})
proces_vinifera_2019.head()

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2020&opcao=opt_03&subopcao=subopt_01')
proces_vinifera_2020 = leitura[5]
proces_vinifera_2020.head()

proces_vinifera_2020 = proces_vinifera_2020.rename(columns={"Quantidade (Kg)" : "2020 (Ltr)"})
proces_vinifera_2020.head()

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2021&opcao=opt_03&subopcao=subopt_01')
proces_vinifera_2021 = leitura[5]
proces_vinifera_2021.head()

proces_vinifera_2021 = proces_vinifera_2021.rename(columns={"Quantidade (Kg)" : "2021 (Ltr)"})
proces_vinifera_2021.head()

proces_vinifera_total = pd.concat([proces_vinifera_2007, proces_vinifera_2008, proces_vinifera_2009, proces_vinifera_2010, proces_vinifera_2011, proces_vinifera_2012, proces_vinifera_2013,
                            proces_vinifera_2014, proces_vinifera_2015, proces_vinifera_2016, proces_vinifera_2017, proces_vinifera_2018, proces_vinifera_2019, proces_vinifera_2020, proces_vinifera_2021], axis=1)
proces_vinifera_total.head()

colunas_selec = ["Cultivar",	"2007 (Ltr)",	"2008 (Ltr)", "2009 (Ltr)",	"2010 (Ltr)", "2011 (Ltr)", "2012 (Ltr)", "2013 (Ltr)", "2014 (Ltr)", "2015 (Ltr)", "2016 (Ltr)", "2017 (Ltr)",
                        "2018 (Ltr)", "2019 (Ltr)", "2020 (Ltr)", "2021 (Ltr)"]
proces_vinifera_total = proces_vinifera_total.loc[:, colunas_selec]
proces_vinifera_total.head()

proces_vinifera_total = proces_vinifera_total.iloc[:, 14:]
proces_vinifera_total.head()

proces_vinifera_total = proces_vinifera_total.replace("-", 0)
proces_vinifera_total.head()

proces_vinifera_total = proces_vinifera_total.set_index(proces_vinifera_total.columns[0])

index_column = proces_vinifera_total.index.name
print(index_column)

proces_vinifera_total.to_excel('proces_vinifera_total.xlsx', index=False)

"""# 1.5 Processamento de Uvas tipo Americana e Hibridas de 2007 até 2021"""

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2007&opcao=opt_03&subopcao=subopt_02')
proces_ame_e_hib_2007 = leitura[5]
proces_ame_e_hib_2007.head()

proces_ame_e_hib_2007 = proces_ame_e_hib_2007.rename(columns={"Quantidade (Kg)" : "2007 (Ltr)"})
proces_ame_e_hib_2007.head()

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2008&opcao=opt_03&subopcao=subopt_02')
proces_ame_e_hib_2008 = leitura[5]
proces_ame_e_hib_2008.head()

proces_ame_e_hib_2008 = proces_ame_e_hib_2008.rename(columns={"Quantidade (Kg)" : "2008 (Ltr)"})
proces_ame_e_hib_2008.head()

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2009&opcao=opt_03&subopcao=subopt_02')
proces_ame_e_hib_2009 = leitura[5]
proces_ame_e_hib_2009.head()

proces_ame_e_hib_2009 = proces_ame_e_hib_2009.rename(columns={"Quantidade (Kg)" : "2009 (Ltr)"})
proces_ame_e_hib_2009.head()

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2010&opcao=opt_03&subopcao=subopt_02')
proces_ame_e_hib_2010 = leitura[5]
proces_ame_e_hib_2010.head()

proces_ame_e_hib_2010 = proces_ame_e_hib_2010.rename(columns={"Quantidade (Kg)" : "2010 (Ltr)"})
proces_ame_e_hib_2010.head()

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2011&opcao=opt_03&subopcao=subopt_02')
proces_ame_e_hib_2011 = leitura[5]
proces_ame_e_hib_2011.head()

proces_ame_e_hib_2011 = proces_ame_e_hib_2011.rename(columns={"Quantidade (Kg)" : "2011 (Ltr)"})
proces_ame_e_hib_2011.head()

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2012&opcao=opt_03&subopcao=subopt_02')
proces_ame_e_hib_2012 = leitura[5]
proces_ame_e_hib_2012.head()

proces_ame_e_hib_2012 = proces_ame_e_hib_2012.rename(columns={"Quantidade (Kg)" : "2012 (Ltr)"})
proces_ame_e_hib_2012.head()

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2013&opcao=opt_03&subopcao=subopt_02')
proces_ame_e_hib_2013 = leitura[5]
proces_ame_e_hib_2013.head()

proces_ame_e_hib_2013 = proces_ame_e_hib_2013.rename(columns={"Quantidade (Kg)" : "2013 (Ltr)"})
proces_ame_e_hib_2013.head()

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2014&opcao=opt_03&subopcao=subopt_02')
proces_ame_e_hib_2014 = leitura[5]
proces_ame_e_hib_2014.head()

proces_ame_e_hib_2014 = proces_ame_e_hib_2014.rename(columns={"Quantidade (Kg)" : "2014 (Ltr)"})
proces_ame_e_hib_2014.head()

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2015&opcao=opt_03&subopcao=subopt_02')
proces_ame_e_hib_2015 = leitura[5]
proces_ame_e_hib_2015.head()

proces_ame_e_hib_2015 = proces_ame_e_hib_2015.rename(columns={"Quantidade (Kg)" : "2015 (Ltr)"})
proces_ame_e_hib_2015.head()

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2016&opcao=opt_03&subopcao=subopt_02')
proces_ame_e_hib_2016 = leitura[5]
proces_ame_e_hib_2016.head()

proces_ame_e_hib_2016 = proces_ame_e_hib_2016.rename(columns={"Quantidade (Kg)" : "2016 (Ltr)"})
proces_ame_e_hib_2016.head()

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2017&opcao=opt_03&subopcao=subopt_02')
proces_ame_e_hib_2017 = leitura[5]
proces_ame_e_hib_2017.head()

proces_ame_e_hib_2017 = proces_ame_e_hib_2017.rename(columns={"Quantidade (Kg)" : "2017 (Ltr)"})
proces_ame_e_hib_2017.head()

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2018&opcao=opt_03&subopcao=subopt_02')
proces_ame_e_hib_2018 = leitura[5]
proces_ame_e_hib_2018.head()

proces_ame_e_hib_2018 = proces_ame_e_hib_2018.rename(columns={"Quantidade (Kg)" : "2018 (Ltr)"})
proces_ame_e_hib_2018.head()

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2019&opcao=opt_03&subopcao=subopt_02')
proces_ame_e_hib_2019 = leitura[5]
proces_ame_e_hib_2019.head()

proces_ame_e_hib_2019 = proces_ame_e_hib_2019.rename(columns={"Quantidade (Kg)" : "2019 (Ltr)"})
proces_ame_e_hib_2019.head()

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2020&opcao=opt_03&subopcao=subopt_02')
proces_ame_e_hib_2020 = leitura[5]
proces_ame_e_hib_2020.head()

proces_ame_e_hib_2020 = proces_ame_e_hib_2020.rename(columns={"Quantidade (Kg)" : "2020 (Ltr)"})
proces_ame_e_hib_2020.head()

leitura = pd.read_html('http://vitibrasil.cnpuv.embrapa.br/index.php?ano=2021&opcao=opt_03&subopcao=subopt_02')
proces_ame_e_hib_2021 = leitura[5]
proces_ame_e_hib_2021.head()

proces_ame_e_hib_2021 = proces_ame_e_hib_2021.rename(columns={"Quantidade (Kg)" : "2021 (Ltr)"})
proces_ame_e_hib_2021.head()

proces_ame_e_hib_total = pd.concat([proces_ame_e_hib_2007, proces_ame_e_hib_2008, proces_ame_e_hib_2009, proces_ame_e_hib_2010, proces_ame_e_hib_2011, proces_ame_e_hib_2012, proces_ame_e_hib_2013,
                            proces_ame_e_hib_2014, proces_ame_e_hib_2015, proces_ame_e_hib_2016, proces_ame_e_hib_2017, proces_ame_e_hib_2018, proces_ame_e_hib_2019, proces_ame_e_hib_2020, proces_ame_e_hib_2021], axis=1)
proces_ame_e_hib_total.head()

colunas_seleci = ["Cultivar",	"2007 (Ltr)",	"2008 (Ltr)", "2009 (Ltr)",	"2010 (Ltr)", "2011 (Ltr)", "2012 (Ltr)", "2013 (Ltr)", "2014 (Ltr)", "2015 (Ltr)", "2016 (Ltr)", "2017 (Ltr)",
                        "2018 (Ltr)", "2019 (Ltr)", "2020 (Ltr)", "2021 (Ltr)"]
proces_ame_e_hib_total = proces_ame_e_hib_total.loc[:, colunas_seleci]
proces_ame_e_hib_total.head()

proces_ame_e_hib_total = proces_ame_e_hib_total.iloc[:, 14:]
proces_ame_e_hib_total.head()

proces_ame_e_hib_total = proces_ame_e_hib_total.replace("-", 0)
proces_ame_e_hib_total.head()

proces_ame_e_hib_total = proces_ame_e_hib_total.set_index(proces_ame_e_hib_total.columns[0])

index_column = proces_ame_e_hib_total.index.name
print(index_column)

proces_ame_e_hib_total.to_excel('proces_ame_e_hib_total.xlsx', index=False)

"""#1.6 Medias de chuva no Rio Grande Do Sul"""

import pandas as pd
leitur = pd.read_html('https://pt.wikipedia.org/wiki/Predefini%C3%A7%C3%A3o:Tabela_clim%C3%A1tica_de_Porto_Alegre')
media_de_chuvas_rs = leitur[0]
media_de_chuvas_rs.head()

media_de_chuvas_rs = media_de_chuvas_rs.drop([0, 4, 6, 7, 8, 9])

media_de_chuvas_rs.columns

media_de_chuvas_rs.columns = media_de_chuvas_rs.columns.droplevel(0)

media_de_chuvas_rs.columns

media_de_chuvas_rs = media_de_chuvas_rs.drop("Ano", axis=1)
media_de_chuvas_rs

colunas_a_formatar = ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez', 'Ano']

def format_decimal(value):
    # Remove special characters and convert to float
    value = float(value.replace(',', '').replace('\xa0', ''))
    return '{:,.2f}'.format(value / 10).replace(',', '.')

for coluna in media_de_chuvas_rs.columns:
    for coluna_formatar in colunas_a_formatar:
        if coluna_formatar in coluna:
            media_de_chuvas_rs[coluna] = media_de_chuvas_rs[coluna].apply(format_decimal)
            break

print(media_de_chuvas_rs)

media_de_chuvas_rs

media_de_chuvas_rs.loc[1, 'Jan'] = float(media_de_chuvas_rs.loc[1, 'Jan']) * 10
media_de_chuvas_rs.loc[2, 'Jan'] = float(media_de_chuvas_rs.loc[2, 'Jan']) * 10
media_de_chuvas_rs.loc[1, 'Dez'] = float(media_de_chuvas_rs.loc[1, 'Dez']) * 10
media_de_chuvas_rs.loc[2, 'Dez'] = float(media_de_chuvas_rs.loc[2, 'Dez']) * 10

media_de_chuvas_rs

chuva_2016 = pd.read_html('https://www.embrapa.br/uva-e-vinho/dados-meteorologicos/bento-goncalves/-/asset_publisher/mVb5LKtZvu3R/content/2016-agrometeorologia-bento-goncalves-resumo-anual/1355300?inheritRedirect=false&redirect=https%3A%2F%2Fwww.embrapa.br%2Fuva-e-vinho%2Fdados-meteorologicos%2Fbento-goncalves%3Fp_p_id%3D101_INSTANCE_mVb5LKtZvu3R%26p_p_lifecycle%3D0%26p_p_state%3Dnormal%26p_p_mode%3Dview%26p_p_col_id%3Dcolumn-2%26p_p_col_pos%3D5%26p_p_col_count%3D7')
media_de_chuvas_rs_2016 = chuva_2016[0]
media_de_chuvas_rs_2016.head()

media_de_chuvas_rs_2016 = media_de_chuvas_rs_2016.T
media_de_chuvas_rs_2016.head()

media_de_chuvas_rs_2016 = media_de_chuvas_rs_2016.reset_index()  # Remove o índice existente
media_de_chuvas_rs_2016.columns = media_de_chuvas_rs_2016.iloc[0]  # Define a primeira linha como os nomes das colunas
media_de_chuvas_rs_2016 = media_de_chuvas_rs_2016[1:]  # Remove a primeira linha que se tornou o nome das colunas
media_de_chuvas_rs_2016 = media_de_chuvas_rs_2016.set_index('Bento GonÃ§alves - 2016')  # Define a coluna desejada como o novo índice

media_de_chuvas_rs_2016.head()

media_de_chuvas_rs_2016.columns

media_de_chuvas_rs_2016.columns.values[1] = 'Indice'

media_de_chuvas_rs_2016.columns

media_de_chuvas_rs_2016 = media_de_chuvas_rs_2016[["Indice", 'JAN', 'FEV', 'MAR', 'ABR', 'MAI', 'JUN', 'JUL', 'AGO', 'SET', 'OUT', 'NOV', 'DEZ']]

media_de_chuvas_rs_2016

media_de_chuvas_rs_2016 = media_de_chuvas_rs_2016.reset_index(drop=True)

media_de_chuvas_rs_2016

media_de_chuvas_rs_2016.drop(index=[4, 5, 6, 7], inplace=True)

media_de_chuvas_rs_2016

def move_ponto_esquerda(valor):
    if isinstance(valor, float):
        return valor / 10
    else:
        return valor

media_de_chuvas_rs_2016.iloc[0:3, 1:] = media_de_chuvas_rs_2016.iloc[0:3, 1:].applymap(move_ponto_esquerda)

media_de_chuvas_rs_2016.head()

precipitacao_media_rs_2016 = media_de_chuvas_rs_2016.iloc[3]
precipitacao_media_rs_2016

precipitacao_media_rs = media_de_chuvas_rs.iloc[3]
precipitacao_media_rs

comparacao_media_rs = pd.DataFrame({'Mês': ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
                                    'Média RS (mm)': [120.7, 110.80, 103.3, 114.4, 112.8, 130.4, 163.5, 120.1, 147.8, 153.2, 105.5, 112.10],
                                    'Média RS 2016 (mm)': [115.0, 146.0, 243.0, 260.0, 60.0, 7.0, 192.0, 111.0, 84.0, 373.0, 104.0, 81.0]})

comparacao_media_rs

comparacao_media_rs = comparacao_media_rs.reset_index()
comparacao_media_rs = comparacao_media_rs.set_index(comparacao_media_rs.columns[1])
comparacao_media_rs = comparacao_media_rs.drop("index", axis=1)
print(comparacao_media_rs)

comparacao_media_rs.plot(figsize=(12, 4), kind = "line")
plt.xlabel('Meses')
plt.ylabel('Quantidade (Milimetros)')
plt.title('Comparação de Média de chuvas no Rio Grande Do Sul')
plt.xticks(rotation=45)
plt.grid(linestyle='dotted')
plt.show()

comparacao_italia = pd.DataFrame({'Mês': ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
                                   'Média RS (mm)': [120.7, 110.80, 103.3, 114.4, 112.8, 130.4, 163.5, 120.1, 147.8, 153.2, 105.5, 112.10],
                                   'Média Sicilia (mm)': [67.1, 63.6, 49.5, 38.2, 21.5, 9.6, 3.7, 10.2, 41.8, 66.6, 71.6, 71.9]
})
comparacao_italia

comparacao_italia = comparacao_italia.reset_index()
comparacao_italia = comparacao_italia.set_index(comparacao_italia.columns[1])
comparacao_italia = comparacao_italia.drop("index", axis=1)
print(comparacao_italia)

comparacao_italia.plot(figsize=(12, 6), kind = "line")
plt.xlabel('Meses')
plt.ylabel('Quantidade (Milimetros)')
plt.title('Comparação de Média de chuvas Brasil X Itália')
plt.xticks(rotation=45)
plt.grid(linestyle='dotted')
plt.show()

comparacao_clima_italia = pd.DataFrame({'Mês': ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
                                   'Média RS (C°)': [27, 26, 25, 22, 18, 10, 7, 8, 10, 19, 22, 25],
                                   'Média Recife (C°)': [28, 29, 29, 28, 27, 26, 25, 26, 27, 27, 28, 28 ],
                                   'Média Sicilia (C°)': [15, 15, 16, 19, 22, 26, 29, 29, 27, 24, 20, 16]
})
comparacao_clima_italia

comparacao_clima_italia = comparacao_clima_italia.reset_index()
comparacao_clima_italia = comparacao_clima_italia.set_index(comparacao_clima_italia.columns[1])
comparacao_clima_italia = comparacao_clima_italia.drop("index", axis=1)
print(comparacao_clima_italia)

comparacao_clima_italia.plot(figsize=(12, 6), kind = "line")
plt.xlabel('Meses')
plt.ylabel('Quantidade (Milimetros)')
plt.title('Comparação de Média de Temperatura Brasil X Itália')
plt.xticks(rotation=45)
plt.grid(linestyle='dotted')
plt.show()

"""#2.1 Visualização de Dados de Exportação

# 2.1.2 >>> O total das exportações nos ultimos 15 (em Litros) anos em uma série temporal
"""

ver4=exportacao_total.copy()
ver4

ver4 = ver4.drop(['2007 Valor (USD)', '2008 Valor (USD)', '2009 Valor (USD)', "2010 Valor (USD)", "2011 Valor (USD)", "2012 Valor (USD)", "2013 Valor (USD)",
                               "2014 Valor (USD)", "2015 Valor (USD)", "2016 Valor (USD)", "2017 Valor (USD)", "2018 Valor (USD)", "2019 Valor (USD)", "2020 Valor (USD)",
                               "2021 Valor (USD)"], axis=1)

print(ver4)

ver4 = ver4.iloc[-1]
print(ver4)

ver4 = pd.DataFrame(ver4)

ver4

import matplotlib.pyplot as plt
import matplotlib.ticker as ticker

ver4['Total'] = ver4['Total'].str.replace('.', '').str.replace(',', '.')

ver4['Total'] = ver4['Total'].astype(float)

ver4.plot(figsize=(8, 4), kind = "bar", legend=None)
plt.xlabel('Ano')
plt.ylabel('Quantidade (Milhões de Lts)')
plt.title('Exportação por Ano (Lts)')
plt.xticks(rotation=45)
plt.grid(linestyle='dotted')
plt.show()
#investigar quals foi o pais que mais impactou no volume de exportação récord no anos de 2009

"""# 2.1.3 >>> Detalhes sobre 2009, ano com o maior volume."""

ver5 = exportacao_total
ver5

ver5 = ver5[["2009 (Ltr)", "2009 Valor (USD)"]]
ver5

ver5 = pd.DataFrame(ver5)
ver5

ver5 = ver5.reset_index()

ver5.columns = ['Paises', 'Litros', 'Valor']

print(ver5)

ver5['Litros'] = ver5['Litros'].str.replace('.', '', regex=False).astype(float)
ver5['Valor'] = ver5['Valor'].str.replace('.', '', regex=False).astype(float)

ver5["Litros"] = pd.to_numeric(ver5["Litros"])
ver5["Valor"] = pd.to_numeric(ver5["Valor"])
ver5

ver5 = ver5.drop(ver5.index[-1])
ver5

ver5 = ver5.set_index("Paises")

ver5 = ver5.sort_values(by='Litros', ascending=False)

ver5 = ver5.nlargest(10, 'Litros')

ver5 = ver5.rename(index={'RÃºssia': 'Rússia',
                                    'China': 'China',
                                    'Paraguai': 'Paraguai',
                                    'Estados Unidos': 'Estados Unidos',
                                    'Alemanha, RepÃºblica DemocrÃ¡tica': 'Alemanha',
                                    'JapÃ£o': 'Japão',
                                    'PaÃ­ses Baixos': 'Países Baixos',
                                    'Portugal': 'Portugal',
                                    'BÃ©lgica': 'Bélgica',
                                    'Angola': 'Angola'})

ver5

ver5["Preço/Ltr"] = ver5 ["Valor"]/ver5["Litros"]
ver5

ver55 = ver5.copy()
ver55

ver55['Litros'] = ver55['Litros']/100000
ver55['Valor'] = ver55['Valor']/100000
ver55

ver55['Preço/Ltr'] = ver55['Preço/Ltr']*10
ver55

ver55.plot(figsize=(12,8), kind="bar")
plt.xlabel("Volume em Milhões de Lts")
plt.ylabel("Paises")
plt.title("Os 10 Maiores Importadores de 2009")
plt.xticks(rotation=45)
plt.grid(linestyle='dotted')
plt.show()
# O pais responsavel por 85% da exportação dos Vinhos Brasileiros

"""# 2.1.4 >>> O total das Exportações nos ultimos 15 anos (em USD) em uma série temporal"""

ver6 = exportacao_total
ver6

coluna_desejada = ['2007 Valor (USD)', '2008 Valor (USD)', '2009 Valor (USD)', "2010 Valor (USD)", "2011 Valor (USD)", "2012 Valor (USD)", "2013 Valor (USD)", "2014 Valor (USD)",
                     "2015 Valor (USD)", "2016 Valor (USD)", "2017 Valor (USD)", "2018 Valor (USD)", "2019 Valor (USD)", "2020 Valor (USD)", "2021 Valor (USD)"]

ver6 = exportacao_total.loc[:, coluna_desejada]
ver6 = pd.DataFrame(ver6)

ver6.tail()

ver6 = ver6.rename(columns={'2007 Valor (USD)':'2007', '2008 Valor (USD)': '2008', '2009 Valor (USD)':'2009', "2010 Valor (USD)":'2010', "2011 Valor (USD)":'2011',
                            "2012 Valor (USD)":'2012', "2013 Valor (USD)":'2013', "2014 Valor (USD)":'2014', "2015 Valor (USD)":'2015', "2016 Valor (USD)":'2016',
                            "2017 Valor (USD)":'2017', "2018 Valor (USD)":'2018', "2019 Valor (USD)":'2019', "2020 Valor (USD)":'2020', "2021 Valor (USD)":'2021'})

ver6 = ver6.iloc[-1]
print(ver6)

ver6 = ver6.reset_index()

ver6.columns = ['Anos', 'Ltr']

print(ver6)

ver6['Ltr'] = ver6['Ltr'].str.replace('.', '', regex=False).astype(float)

ver6["Ltr"] = pd.to_numeric(ver6["Ltr"])
ver6

ver6 = ver6.drop(ver6.index[0])
ver6

ver6 = ver6.set_index("Anos")

ver6

ver6.plot(figsize=(6, 4), kind = "bar", legend=None)
plt.xlabel('Ano')
plt.ylabel('Quantidade (Milhões de USD)')
plt.title('Exportação por Ano (USD)')
plt.xticks(rotation=45)
plt.grid(linestyle='dotted')
plt.show()

"""# 2.1.5 >>>Detalhes sobre 2013, ano com maior volume"""

ver7 = exportacao_total
ver7

ver7 = ver7[["2013 Valor (USD)", "2013 (Ltr)"]]
ver7

ver7 = pd.DataFrame(ver7)
ver7

ver7 = ver7.reset_index()

ver7.columns = ['Países', 'USD', "Litros"]

print(ver7)

ver7['USD'] = ver7['USD'].str.replace('.', '', regex=False).astype(float)
ver7['Litros'] = ver7['Litros'].str.replace('.', '', regex=False).astype(float)

ver7["USD"] = pd.to_numeric(ver7["USD"])
ver7["Litros"] = pd.to_numeric(ver7["Litros"])
ver7

ver7 = ver7.set_index("Países")

ver7 = ver7.drop(ver7.index[-1])

ver7 = ver7.sort_values(by='USD', ascending=False)

ver7 = ver7.nlargest(10, 'USD')

ver7

ver7 = ver7.rename(index={'RÃºssia': 'Rússia',
                                    'FinlÃ¢ndia': 'Finlândia', 'Estados Unidos': 'EUA',
                                    'Alemanha, RepÃºblica DemocrÃ¡tica': 'Alemanha',
                                    'JapÃ£o': 'Japão', 'PaÃ­ses Baixos': 'Países Baixos'})

ver77 = ver7.copy()
ver77

ver77["Preço/Ltr"] = ver77 ["USD"]/ver77["Litros"]
ver77

ver77['USD'] = ver77['USD']/100000
ver77['Litros'] = ver77['Litros']/100000
ver77

ver77.plot(figsize=(12, 6), kind = "bar", legend=None)
plt.xlabel('Paises')
plt.ylabel('Quantidade (Milhões de USD)')
plt.title('Maiores Importadores de 2013 (USD)')
plt.xticks(rotation=45)
plt.grid(linestyle='dotted')
plt.legend(["USD", "Litros", "Preço/Ltr"])
plt.show()
#A Rússia foi responsavel por 65% de todo o volume financeiro de exportações de vinhos BRasileiros de 2013.

"""# 2.1.6 >>> Detalhes sobre o ultimo ano 2021"""

ver8 = exportacao_total
ver8

ver8 = ver8[["2021 Valor (USD)", "2021 (Ltr)"]]
ver8

ver8 = pd.DataFrame(ver8)
ver8

ver8 = ver8.reset_index()

ver8.columns = ['Países em 2021', 'USD', 'Ltr']

print(ver8)

ver8['USD'] = ver8['USD'].str.replace('.', '', regex=False).astype(float)
ver8['Ltr'] = ver8['Ltr'].str.replace('.', '', regex=False).astype(float)

ver8["USD"] = pd.to_numeric(ver8["USD"])
ver8["Ltr"] = pd.to_numeric(ver8["Ltr"])
ver8

ver8 = ver8.dropna(subset=["USD", "Ltr"])
ver8

ver8 = ver8.set_index("Países em 2021")

ver8 = ver8.drop(ver8.index[-1])

ver8 = ver8.sort_values(by='USD', ascending=False)

ver8 = ver8.nlargest(15, 'USD')
ver8

ver8 = ver8.rename(index={'RÃºssia': 'Rússia','NigÃ©ria': 'Nigéria', 'CuraÃ§ao': 'Curaçao', 'PanamÃ¡': 'Panamá', 'FinlÃ¢ndia': 'Finlândia',
                          'JapÃ£o': 'Japão', 'Estados Unidos': 'EUA'})

ver8.plot(figsize=(10, 8), kind = "bar", legend=None)
plt.xlabel('Paises')
plt.ylabel('Quantidade (bilhões de USD)')
plt.title('Maiores Importadores de 2021 (USD)')
plt.xticks(rotation=45)
plt.grid(linestyle='dotted')
plt.legend(["USD", "Ltr"])
plt.show()

"""# 2.1.6.1 Preço por Litro em 2021"""

ver9 = ver8.copy()
ver9

ver9["Preço/Ltr"] = ver9 ["USD"]/ver9["Ltr"]
ver9

ver9['USD'] = ver9['USD']/100000
ver9['Ltr'] = ver9['Ltr']/100000
ver9

ver9.plot(figsize=(8, 8), kind = "bar", legend=None)
plt.xlabel('Paises')
plt.ylabel('Quantidade (bilhões de USD)')
plt.title('Maiores Importadores de 2021 (USD)')
plt.xticks(rotation=45)
plt.grid(linestyle='dotted')
plt.legend(["USD", "Ltr", "Preço/Ltr"])
plt.show()

"""#2.1.1 Dados geral de exportação nos ultimos 15 anos por País (USD)"""

ver10 = exportacao_total.copy()
ver10

colunas_USD = ['2007 Valor (USD)', '2008 Valor (USD)', '2009 Valor (USD)', "2010 Valor (USD)", "2011 Valor (USD)", "2012 Valor (USD)", "2013 Valor (USD)", "2014 Valor (USD)",
                     "2015 Valor (USD)", "2016 Valor (USD)", "2017 Valor (USD)", "2018 Valor (USD)", "2019 Valor (USD)", "2020 Valor (USD)", "2021 Valor (USD)"]

ver10 = exportacao_total.loc[:, colunas_USD]
ver10 = pd.DataFrame(ver10)

ver10

ver10 = ver10.reset_index()
ver10 = ver10.set_index(ver10.columns[0])
print(ver10)

ver10

columns = ['2007 Valor (USD)', '2008 Valor (USD)', '2009 Valor (USD)', '2010 Valor (USD)', '2011 Valor (USD)', '2012 Valor (USD)', '2013 Valor (USD)', '2014 Valor (USD)',
           '2015 Valor (USD)', '2016 Valor (USD)', '2017 Valor (USD)', '2018 Valor (USD)', '2019 Valor (USD)', '2020 Valor (USD)', '2021 Valor (USD)']

for col in columns:
    ver10[col] = ver10[col].str.replace('.', '', regex=False).astype(float)

ver10

ver10 = ver10.fillna(0)
ver10

col = ['2007 Valor (USD)', '2008 Valor (USD)', '2009 Valor (USD)', "2010 Valor (USD)", "2011 Valor (USD)", "2012 Valor (USD)", "2013 Valor (USD)", "2014 Valor (USD)",
                     "2015 Valor (USD)", "2016 Valor (USD)", "2017 Valor (USD)", "2018 Valor (USD)", "2019 Valor (USD)", "2020 Valor (USD)", "2021 Valor (USD)"]
ver10["Total"] = ver10[col].sum(axis=1)
ver10

ver10 = ver10.drop(ver10.index[-1])

ver10 = ver10.sort_values(by='Total', ascending=False)

ver10 = ver10.nlargest(15, 'Total')
ver10

"""# 2.1.1.1 >>> os 15 maiores no total dos 15 anos"""

ver11 = ver10.copy()
ver11

ver11 = ver11['Total']
ver11

ver11 = ver11.rename(index={'RÃºssia': 'Rússia', 'JapÃ£o': 'Japão', 'Estados Unidos': 'EUA', 'PaÃ­ses Baixos': 'Países Baixos', 'Alemanha, RepÃºblica DemocrÃ¡tica': 'Alemanha',
                            'BÃ©lgica': 'Bélgica', 'CanadÃ¡': 'Canadá', 'SuÃ­Ã§a': 'Sudão', 'FranÃ§a': 'França'})

ver11.plot(figsize=(12, 6), kind = "bar", legend=None)
plt.xlabel('Paises')
plt.ylabel('Quantidade (bilhões de USD)')
plt.title('Maiores Importadores nos ultimos 15 anos')
plt.xticks(rotation=45)
plt.grid(linestyle='dotted')
plt.legend(["USD", "Ltr"])
plt.show()

"""# 2.1.1.2 >>> O histórico dos 15 maiores no total dos 15 anos"""

ver12 = ver10.copy()
ver12

ver12 = pd.DataFrame(ver12)

ver12 = ver12.rename(index={'RÃºssia': 'Rússia', 'JapÃ£o': 'Japão', 'Estados Unidos': 'EUA', 'PaÃ­ses Baixos': 'Países Baixos', 'Alemanha, RepÃºblica DemocrÃ¡tica': 'Alemanha',
                            'BÃ©lgica': 'Bélgica', 'CanadÃ¡': 'Canadá', 'SuÃ­Ã§a': 'Sudão', 'FranÃ§a': 'França'})

ver12

ver12 = ver12.loc[['Paraguai', 'Rússia', 'EUA', 'Reino Unido', 'China', 'Países Baixos', 'Espanha', 'Alemanha', 'Japão', 'Haiti']]
ver12

ver12 = ver12.drop('Total', axis=1)

ver12

ver12 = ver12.rename(columns={'2007 Valor (USD)': '2007', '2008 Valor (USD)': '2008','2009 Valor (USD)': '2009', '2010 Valor (USD)': '2010', '2011 Valor (USD)': '2011',
                              '2012 Valor (USD)': '2012', '2013 Valor (USD)': '2013', '2014 Valor (USD)': '2014', '2015 Valor (USD)': '2015', '2016 Valor (USD)': '2016',
                              '2017 Valor (USD)': '2017', '2018 Valor (USD)': '2018', '2019 Valor (USD)': '2019', '2020 Valor (USD)': '2020', '2021 Valor (USD)': '2021'})

ver12.T.plot(figsize=(12, 8), kind = "line", legend=None)
plt.xlabel('Paises')
plt.ylabel('Quantidade (bilhões de USD)')
plt.title('Maiores Importadores nos ultimos 15 anos (USD)')
plt.xticks(rotation=45)
plt.grid(linestyle='dotted')
plt.legend()
plt.show()

"""# 3.1 >>> Produção de uvas"""

ver13 = producao_total.copy()
ver13.head()

ver13 = pd.DataFrame(ver13)
ver13.head()

ver13 = ver13.replace("-", 0)
ver13.head()

ver13 = ver13.reset_index()
ver13 = ver13.set_index(ver13.columns[0])
print(ver13.head())

ver13.head()

columns = ['2007', '2008', '2009', '2010', '2011', '2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', '2020', '2021']

for col in columns:
    ver13[col] = ver13[col].str.replace('.', '', regex=False).astype(float)
ver13.head()

ver13 = ver13.fillna(0)
ver13.head()

ver14 = ver13.loc[['VINHO DE MESA', 'VINHO FINO DE MESA (VINÃFERA)', 'SUCO', 'DERIVADOS', 'Total']]
ver14

ver14 = ver14.rename(index={'VINHO FINO DE MESA (VINÃFERA)': 'Vinho Fino'})

ver14 = ver14.transpose().plot(kind='line', figsize=(10, 6))
ver14.set_yticklabels(['{:.0f} M'.format(x/1e6) for x in ver14.get_yticks()])
plt.ylabel('Volume em Litros (em milhões)')
plt.xlabel('Ano')
plt.title('Produção de Uva por ano')
plt.ylim(0, 600_000_000)
plt.yticks([0, 100_000_000, 200_000_000, 300_000_000, 400_000_000, 500_000_000, 600_000_000], ['0 M', '100 M', '200 M', '300 M', '400 M', '500 M', '600 M'])
plt.show()

ver14

"""# 3.2 Os maiores produtosres do mundo de uvas"""

maiores_produtores_mundo = pd.read_html("https://pt.wikipedia.org/wiki/Uva")
maiores_produtores_mundo = maiores_produtores_mundo[4]
maiores_produtores_mundo.head()

maiores_produtores_mundo = pd.DataFrame(maiores_produtores_mundo)
maiores_produtores_mundo

maiores_produtores_mundo = maiores_produtores_mundo.reset_index()
maiores_produtores_mundo = maiores_produtores_mundo.set_index(maiores_produtores_mundo.columns[1])
maiores_produtores_mundo

maiores_produtores_mundo = maiores_produtores_mundo.drop("index", axis=1)

maiores_produtores_mundo = maiores_produtores_mundo.drop(maiores_produtores_mundo.index[-1])

maiores_produtores_mundo

maiores_produtores_mundo["Produção em 2017 (milhões de toneladas anuais)"] = maiores_produtores_mundo["Produção em 2017 (milhões de toneladas anuais)"].str.replace('.', '', regex=False).astype(float)

maiores_produtores_mundo

maiores_produtores_mundo = maiores_produtores_mundo.drop(maiores_produtores_mundo.index[-1])

maiores_produtores_mundo.plot(figsize=(12, 8), kind = "bar", legend=None)
plt.xlabel('Paises')
plt.ylabel('Milhões de Toneladas Anuais')
plt.title('Maiores Produtores de Uvas do Mundo')
plt.xticks(rotation=45)
plt.grid(linestyle='dotted')
plt.legend()
plt.show()

comparado_territorio = maiores_produtores_mundo.copy()
comparado_territorio

tamanho_territorio = {'China': 9.596, 'Itália': 0.301, 'Estados Unidos':9.834, 'França':0.551, 'Espanha':0.505, 'Turquia':0.783, 'Índia':3.287, 'África do Sul' : 1.219, 'Chile': 0.756,
                      'Argentina': 0.756, "Brasil":8.515, "Irão": 1.648, 'Austrália': 7.692, 'Egito': 1.002, 'Uzbequistão': 0.448, 'Roménia':0.238, 'Alemanha': 0.357, 'Grécia': 0.131,
                      'Afeganistão': 0.652, 'Portugal': 0.092}

comparado_territorio['Tamanho do Território (Mil Km²)'] = comparado_territorio.index.map(tamanho_territorio)
comparado_territorio

comparado_territorio['Tamanho do Território (Mil Km²)'] = comparado_territorio['Tamanho do Território (Mil Km²)']*10
comparado_territorio

correcoes = {'Irão': 'Irã', 'Roménia':'Romênia'}
comparado_territorio.rename(index=correcoes, inplace = True)

comparado_territorio.plot(figsize=(12, 8), kind = "bar", legend=None)
plt.xlabel('Paises')
plt.ylabel('Milhões de Toneladas Anuais')
plt.title('Maiores Produtores de Uvas do Mundo')
plt.xticks(rotation=45)
plt.grid(linestyle='dotted')
plt.legend()
plt.show()

consumo_percapito = {
    "Países" :['Portugal', 'França', 'Itália', 'Suiça', 'Austria', 'Australia', 'Alemanha', 'Espanha', 'Holanda', 'Bélgica', 'Rep. Checa', 'Suécia', 'Romenia', 'Argentina', 'Grécia', 'Reino Unido', 'Canadá', 'EUA', 'Afr. do Sul', 'Rússia', 'Japão', 'Brasil', 'China'],
    "Consumo Per Capito (Ltr)" :[51.9, 46.9, 46.0, 35.3, 30.6, 28.7, 27.5, 26.2, 26.1, 26.0, 25.6, 25.5, 24.6, 24.5, 24.5, 24.0, 13.3, 12.2, 9.5, 8.8, 3.0, 2.4, 0.9]
}

comparacao_territorio_consumo = pd.DataFrame(consumo_percapito)
comparacao_territorio_consumo

comparacao_territorio_consumo = comparacao_territorio_consumo.reset_index()
comparacao_territorio_consumo = comparacao_territorio_consumo.set_index(comparacao_territorio_consumo.columns[1])
comparacao_territorio_consumo = comparacao_territorio_consumo.drop("index", axis=1)
print(comparacao_territorio_consumo)

comparacao_territorio_consumo.plot(figsize=(8, 4), kind = "bar", legend=None)
plt.xlabel('Paises')
plt.ylabel('(Litros) Per capita')
plt.title('Maiores consumidoresde vinhos do Mundo')
plt.xticks(rotation=45)
plt.grid(linestyle='dotted')
plt.legend()
plt.show()

"""# 3.3 >>>>Produção por estados Brasileiros"""

dados = {
    "Estado": ["RS", "PE", "SP", "SC", "BA", "PR", "MG", "ES", "PB", "DF", "GO", "MT", "CE", "RJ", "PI", "RO", "MS", "RN", "TO"],
    'Produção 2017 (Ton)': [956887, 621170, 133261, 65196, 56504, 53345, 13685, 3468, 2620, 1700, 1650, 1002, 708, 302, 240, 187, 78, 30, 1]
}

producao_brasil_estados = pd.DataFrame(dados)
producao_brasil_estados

producao_brasil_estados = producao_brasil_estados.reset_index()
producao_brasil_estados = producao_brasil_estados.set_index(producao_brasil_estados.columns[1])
producao_brasil_estados = producao_brasil_estados.drop("index", axis=1)
print(producao_brasil_estados)

producao_brasil_estados['Produção 2017 (Ton)'] = producao_brasil_estados['Produção 2017 (Ton)']/1000
producao_brasil_estados

producao_brasil_estados = producao_brasil_estados.nlargest(5, 'Produção 2017 (Ton)')
producao_brasil_estados

producao_brasil_estados.plot(figsize=(8, 4), kind = "bar", legend=None)
plt.xlabel('Estados')
plt.ylabel('Milhões de Toneladas Anuais')
plt.title('O 5 Estados Maiores Produtores de Uvas do Brasil')
plt.xticks(rotation=0)
plt.grid(linestyle='dotted')
plt.legend()
plt.show()